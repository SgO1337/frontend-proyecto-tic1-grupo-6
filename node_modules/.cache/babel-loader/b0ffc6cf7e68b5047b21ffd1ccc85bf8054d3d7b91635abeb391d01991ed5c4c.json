{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paula\\\\Desktop\\\\TIC\\\\frontend-proyecto-tic1-grupo-6\\\\src\\\\components\\\\MoviesList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesList = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0); // Actual page number\n  const [movies, setMovies] = useState([]);\n\n  // useEffect to load mock movie data when the component mounts\n  useEffect(() => {\n    // Mock data for movies\n    const mockMovies = [{\n      id: 1,\n      title: 'Inception',\n      posterUrl: 'https://m.media-amazon.com/images/I/51zUbui+gbL._AC_SY679_.jpg',\n      isAvailable: true\n    }, {\n      id: 2,\n      title: 'The Matrix',\n      posterUrl: 'https://m.media-amazon.com/images/I/51EG732BV3L._AC_.jpg',\n      isAvailable: true\n    }, {\n      id: 3,\n      title: 'Harry Potter and the Order of the P',\n      posterUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6DX4m9ThWvIjbyFvA2jAec7mmZOYytj4-8w&s',\n      isAvailable: true\n    }, {\n      id: 4,\n      title: 'The Dark Knight',\n      posterUrl: 'https://m.media-amazon.com/images/I/51OeArX+FQL._AC_.jpg',\n      isAvailable: true\n    }, {\n      id: 5,\n      title: 'Avengers: Endgame',\n      posterUrl: 'https://m.media-amazon.com/images/I/81ai6zx6eXL._AC_SY679_.jpg',\n      isAvailable: false\n    }];\n    setTimeout(() => {\n      setMovies(mockMovies); // Set mock movies data to state\n    }, 500);\n  }, []);\n  /*\r\n  useEffect(() => {\r\n     // Fetch the list of movies currently in theaters from the API\r\n     axios.get('/api/movies/currently-available')\r\n         .then(response => setMovies(response.data))\r\n         .catch(error => console.error('Error fetching movies!', error));\r\n  }, []);\r\n   */\n\n  const moviesPerPage = 4; // How many per page\n\n  const availableMovies = movies.filter(movie => movie.isAvailable); // available movies\n\n  const totalPages = Math.ceil(availableMovies.length / moviesPerPage);\n  const handleNextPage = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Calculates which picture to show\n  const startIndex = currentPage * moviesPerPage;\n  const selectedMovies = availableMovies.slice(startIndex, startIndex + moviesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.title,\n          style: {\n            width: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesList, \"WjnspaG5RKmhmFmuVDyjteq4KNI=\");\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MoviesList","_s","currentPage","setCurrentPage","movies","setMovies","mockMovies","id","title","posterUrl","isAvailable","setTimeout","moviesPerPage","availableMovies","filter","movie","totalPages","Math","ceil","length","handleNextPage","handlePrevPage","startIndex","selectedMovies","slice","children","style","display","flexWrap","gap","map","width","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Paula/Desktop/TIC/frontend-proyecto-tic1-grupo-6/src/components/MoviesList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MoviesList = () => {\r\n    const [currentPage, setCurrentPage] = useState(0); // Actual page number\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    // useEffect to load mock movie data when the component mounts\r\n    useEffect(() => {\r\n        // Mock data for movies\r\n        const mockMovies = [\r\n            {\r\n                id: 1,\r\n                title: 'Inception',\r\n                posterUrl: 'https://m.media-amazon.com/images/I/51zUbui+gbL._AC_SY679_.jpg',\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: 2,\r\n                title: 'The Matrix',\r\n                posterUrl: 'https://m.media-amazon.com/images/I/51EG732BV3L._AC_.jpg',\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: 3,\r\n                title: 'Harry Potter and the Order of the P',\r\n                posterUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6DX4m9ThWvIjbyFvA2jAec7mmZOYytj4-8w&s',\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: 4,\r\n                title: 'The Dark Knight',\r\n                posterUrl: 'https://m.media-amazon.com/images/I/51OeArX+FQL._AC_.jpg',\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: 5,\r\n                title: 'Avengers: Endgame',\r\n                posterUrl: 'https://m.media-amazon.com/images/I/81ai6zx6eXL._AC_SY679_.jpg',\r\n                isAvailable: false\r\n            },\r\n        ];\r\n\r\n        setTimeout(() => {\r\n            setMovies(mockMovies);  // Set mock movies data to state\r\n        }, 500);\r\n\r\n    }, []);\r\n     /*\r\n    useEffect(() => {\r\n        // Fetch the list of movies currently in theaters from the API\r\n        axios.get('/api/movies/currently-available')\r\n            .then(response => setMovies(response.data))\r\n            .catch(error => console.error('Error fetching movies!', error));\r\n    }, []);\r\n\r\n    */\r\n\r\n    const moviesPerPage = 4; // How many per page\r\n\r\n    const availableMovies = movies.filter(movie => movie.isAvailable); // available movies\r\n\r\n    const totalPages = Math.ceil(availableMovies.length / moviesPerPage);\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    // Calculates which picture to show\r\n    const startIndex = currentPage * moviesPerPage;\r\n    const selectedMovies = availableMovies.slice(startIndex, startIndex + moviesPerPage);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                {movies.length > 0 ? (\r\n                    movies.map(movie => (\r\n                        <div key={movie.id} style={{ width: '200px' }}>\r\n                            <img\r\n                                src={movie.posterUrl}\r\n                                alt={movie.title}\r\n                                style={{ width: '100%', height: 'auto' }}\r\n                            />\r\n                            <h2>{movie.title}</h2>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No movies available</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}