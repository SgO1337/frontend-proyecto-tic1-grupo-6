{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paula\\\\Desktop\\\\TIC\\\\frontend-proyecto-tic1-grupo-6\\\\src\\\\components\\\\MoviesList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesList = ({\n  movies\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0); // Actual page number\n  const moviesPerPage = 4; // How many per page\n\n  const availableMovies = movies.filter(movie => movie.isAvailable); // available movies\n\n  const totalPages = Math.ceil(availableMovies.length / moviesPerPage);\n  const handleNextPage = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Calculates which picture to show\n  const startIndex = currentPage * moviesPerPage;\n  const selectedMovies = availableMovies.slice(startIndex, startIndex + moviesPerPage);\n  useEffect(() => {\n    // Fetch the list of movies currently in theaters from the API\n    axios.get('/api/movies/currently-available').then(response => setMovies(response.data)).catch(error => console.error('Error fetching movies!', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.title,\n          style: {\n            width: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesList, \"SWy2xPoRfsM85lGh9hsknJ2L/Jk=\");\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MoviesList","movies","_s","currentPage","setCurrentPage","moviesPerPage","availableMovies","filter","movie","isAvailable","totalPages","Math","ceil","length","handleNextPage","handlePrevPage","startIndex","selectedMovies","slice","get","then","response","setMovies","data","catch","error","console","children","style","display","flexWrap","gap","map","width","src","posterUrl","alt","title","height","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Paula/Desktop/TIC/frontend-proyecto-tic1-grupo-6/src/components/MoviesList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MoviesList = ({ movies }) => {\r\n    const [currentPage, setCurrentPage] = useState(0); // Actual page number\r\n    const moviesPerPage = 4; // How many per page\r\n\r\n    const availableMovies = movies.filter(movie => movie.isAvailable); // available movies\r\n\r\n    const totalPages = Math.ceil(availableMovies.length / moviesPerPage);\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    // Calculates which picture to show\r\n    const startIndex = currentPage * moviesPerPage;\r\n    const selectedMovies = availableMovies.slice(startIndex, startIndex + moviesPerPage);\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of movies currently in theaters from the API\r\n        axios.get('/api/movies/currently-available')\r\n            .then(response => setMovies(response.data))\r\n            .catch(error => console.error('Error fetching movies!', error));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                {movies.length > 0 ? (\r\n                    movies.map(movie => (\r\n                        <div key={movie.id} style={{ width: '200px' }}>\r\n                            <img\r\n                                src={movie.posterUrl}\r\n                                alt={movie.title}\r\n                                style={{ width: '100%', height: 'auto' }}\r\n                            />\r\n                            <h2>{movie.title}</h2>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No movies available</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}